[{"/home/qsmit/hot-off-the-press/client/src/index.tsx":"1","/home/qsmit/hot-off-the-press/client/src/App.tsx":"2","/home/qsmit/hot-off-the-press/client/src/store/configureStore.tsx":"3","/home/qsmit/hot-off-the-press/client/src/components/Navbar.tsx":"4","/home/qsmit/hot-off-the-press/client/src/components/MainRoutes.tsx":"5","/home/qsmit/hot-off-the-press/client/src/store/reducers/session.tsx":"6","/home/qsmit/hot-off-the-press/client/src/store/reducers/index.tsx":"7","/home/qsmit/hot-off-the-press/client/src/components/pages/Landing.tsx":"8","/home/qsmit/hot-off-the-press/client/src/components/pages/Session.tsx":"9","/home/qsmit/hot-off-the-press/client/src/store/reducers/error.tsx":"10","/home/qsmit/hot-off-the-press/client/src/components/AuthForm.tsx":"11","/home/qsmit/hot-off-the-press/client/src/services/api.tsx":"12","/home/qsmit/hot-off-the-press/client/src/components/pages/NewsFeed.tsx":"13","/home/qsmit/hot-off-the-press/client/src/hocs/ProtectedRoute.tsx":"14","/home/qsmit/hot-off-the-press/client/src/hocs/NotAuthenticatedRoute.tsx":"15","/home/qsmit/hot-off-the-press/client/src/components/Headlines.tsx":"16","/home/qsmit/hot-off-the-press/client/src/components/utilites/ProgressLoader.tsx":"17","/home/qsmit/hot-off-the-press/client/src/components/pages/ErrorMessage.tsx":"18","/home/qsmit/hot-off-the-press/client/src/components/utilites/LoadMoreButton.tsx":"19","/home/qsmit/hot-off-the-press/client/src/components/Sidebar.tsx":"20","/home/qsmit/hot-off-the-press/client/src/store/localStorage.tsx":"21","/home/qsmit/hot-off-the-press/client/src/components/pages/NotFound.tsx":"22"},{"size":220,"mtime":1610462213800,"results":"23","hashOfConfig":"24"},{"size":1466,"mtime":1610540442525,"results":"25","hashOfConfig":"24"},{"size":450,"mtime":1610540525695,"results":"26","hashOfConfig":"24"},{"size":1920,"mtime":1610540980145,"results":"27","hashOfConfig":"24"},{"size":4212,"mtime":1610542680905,"results":"28","hashOfConfig":"24"},{"size":2976,"mtime":1610532807130,"results":"29","hashOfConfig":"24"},{"size":258,"mtime":1610462213830,"results":"30","hashOfConfig":"24"},{"size":3259,"mtime":1610542233625,"results":"31","hashOfConfig":"24"},{"size":865,"mtime":1610532908320,"results":"32","hashOfConfig":"24"},{"size":863,"mtime":1610462213830,"results":"33","hashOfConfig":"24"},{"size":4405,"mtime":1610541268825,"results":"34","hashOfConfig":"24"},{"size":672,"mtime":1610532807120,"results":"35","hashOfConfig":"24"},{"size":3211,"mtime":1610532806830,"results":"36","hashOfConfig":"24"},{"size":558,"mtime":1610532806840,"results":"37","hashOfConfig":"24"},{"size":618,"mtime":1610532806840,"results":"38","hashOfConfig":"24"},{"size":2001,"mtime":1610532806820,"results":"39","hashOfConfig":"24"},{"size":493,"mtime":1610532806830,"results":"40","hashOfConfig":"24"},{"size":428,"mtime":1610532806830,"results":"41","hashOfConfig":"24"},{"size":507,"mtime":1610532806830,"results":"42","hashOfConfig":"24"},{"size":1873,"mtime":1610539776515,"results":"43","hashOfConfig":"24"},{"size":551,"mtime":1610540232405,"results":"44","hashOfConfig":"24"},{"size":485,"mtime":1610542702205,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"hyvzum",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/qsmit/hot-off-the-press/client/src/index.tsx",[],["98","99"],"/home/qsmit/hot-off-the-press/client/src/App.tsx",[],"/home/qsmit/hot-off-the-press/client/src/store/configureStore.tsx",[],"/home/qsmit/hot-off-the-press/client/src/components/Navbar.tsx",["100"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { StoreState } from '../App'\nimport { Button } from '@material-ui/core'\nimport * as AuthAction from '../store/reducers/session'\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst Navbar: React.FC<INavbarProps> = ({ toggleDrawerState }) => {\n    const dispatch = useDispatch()\n\n    const isLoggedIn = useSelector((state: StoreState) => state.session.isAuthenticated)\n\n\n    const logout = () => {\n        dispatch(AuthAction.logout())\n    }\n\n    return (\n        <nav className='navbar'>\n            <div className='navbar__container'>\n                <div className='navbar__logo-box'>\n                    <Link to='/'>\n                        <WhatshotIcon color='secondary' style={{ fontSize: 40 }} />\n                    </Link>\n                    <span className='navbar__logo-text'>OFF&rarr;THE&rarr;PRESS</span>\n                </div>\n                {!isLoggedIn && (\n                    <div className='navbar__links'>\n                        <Link to='/signup'>\n                            SignUp\n                    </Link>\n                        <Link to='/login'>\n                            Login\n                    </Link>\n                    </div>\n\n                )}\n\n                {isLoggedIn && (\n                    <div className='nav__end'>\n                        <Button variant='contained' color='primary' onClick={logout}>\n                            Logout\n                        </Button>\n                        <a className='menu' onClick={toggleDrawerState(true)}><MenuIcon style={{fontSize: 40}}></MenuIcon></a>\n                    </div>\n                )}\n            </div>\n        </nav>\n    )\n}\n// todo - update\ninterface INavbarProps {\n    toggleDrawerState: any;\n}\n\nexport default Navbar;","/home/qsmit/hot-off-the-press/client/src/components/MainRoutes.tsx",[],"/home/qsmit/hot-off-the-press/client/src/store/reducers/session.tsx",["101","102"],"import { AuthType } from '../../components/AuthForm'\nimport { Method } from '../../services/api'\nimport { addError, removeError } from './error'\n// import Cookies from 'js-cookie'\n// TYPES\nimport { Actions as ErrorActions } from './error'\n\n//ACTION TYPES\n// had to make actionType 'ADD_CURRENT_USER' as custom type to satisfy the dispatch arg type later\nconst ADD_CURRENT_USER: 'ADD_CURRENT_USER' = 'ADD_CURRENT_USER'\n/*  \n    don't need 'remove current user' action since logout will just pass an empty user obj\n    which will cause 'isAuthenticated' boolean to be false\n    const REMOVE_CURRENT_USER = 'REMOVE_CURRENT_USER' \n*/\n\n// TYPES AND INTERFACES\nexport interface User {\n    id?: string;\n    username?: string;\n}\n\nexport interface SessionState {\n    isAuthenticated: boolean;\n    user: User | {}\n}\n\ntype Actions = {\n    type: \"ADD_CURRENT_USER\";\n    user: User\n}\n\n// not used\ntype IDispatchCurrentUser = (user: Actions) => void\ntype IDispatchRemoveError = (error: ErrorActions) => void\n\n\n\n// ACTION CREATORS\nconst addCurrentUser = (user: User) => {\n    return {\n        type: ADD_CURRENT_USER,\n        user\n    }\n}\n\n// THUNKS\n\n// note: find better typing for mult dispatches\n// login or signup\nexport const authenticateUser = (type: AuthType, userData: {}) => {\n    return async (dispatch: any) => {\n        try {\n            dispatch(removeError())\n            const res = await fetch(`/api/session/${type}`,{\n                method: Method.POST,\n                headers: {\n                    'Content-Type': 'application/json'\n                }, \n                body: JSON.stringify(userData)\n            })\n\n            const data = await res.json()\n\n            if(!res.ok){\n                throw data\n            }\n\n            //grab out token to add to local storage\n            const { token, id, username } = data\n\n            // set token to localStorage\n            localStorage.setItem('token', token)\n\n            // build user obj with just id and username from returned user from db\n            dispatch(addCurrentUser({ id, username }))\n            \n\n        } catch(e){\n            console.log(e)\n            dispatch(addError(e.message))\n        }\n    }\n}\n\nexport const logout = () => {\n    return (dispatch: IDispatchCurrentUser) => {\n        localStorage.removeItem('token')\n        // Cookies.remove('token')\n        // empty obj to clear current user from redux\n        dispatch(addCurrentUser({}))\n    }\n}\n\n// REDUCER\n\nconst DEFAULT_STATE = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default (state: SessionState = DEFAULT_STATE, action: Actions) => {\n    switch (action.type) {\n        case ADD_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !!Object.keys(action.user).length,\n                user: action.user\n            }\n        default:\n            return state;\n    }\n}","/home/qsmit/hot-off-the-press/client/src/store/reducers/index.tsx",[],"/home/qsmit/hot-off-the-press/client/src/components/pages/Landing.tsx",["103","104","105","106","107","108"],"import React from 'react'\nimport hot1 from '../../hot-1.jpg'\nimport hot2 from '../../hot-2.jpg'\nimport hot3 from '../../hot-3.jpg'\nimport hot4 from '../../hot-4.jpg'\nimport hot5 from '../../hot-5.jpg'\nimport hot6 from '../../hot-6.jpg'\nimport * as FaIcons from 'react-icons/fa'\n// import * as CgIcons from 'react-icons/cg'\n\nconst Landing: React.FC = () => {\n    return (\n        <>\n            <header className='header'>\n                <h1 className='heading-primary'>\n                    <span className='heading-primary--main'>Capture</span>\n                    <span className='heading-primary--sub spacing'>Latest news</span>\n                </h1>\n                <a href='/signup' className='btn btn--white btn--animated'>SignUp Here</a>\n            </header>\n            <main>\n                <section className='section-composite'>\n                    <div className='heading-secondary section-composite__heading'>\n                        <span>View News Feeds</span>\n                    </div>\n                    <div className='composition'>\n                        <img className='composition__photo composition__photo--p1' src={hot1} alt='skyscraper photo' />\n                        <img className='composition__photo composition__photo--p2' src={hot2} alt='business photo' />\n                        <img className='composition__photo composition__photo--p3' src={hot3} alt='new stream photo' />\n                        <img className='composition__photo composition__photo--p4' src={hot4} alt='typewriter photo' />\n                        <img className='composition__photo composition__photo--p5' src={hot5} alt='news stand photo' />\n                        <img className='composition__photo composition__photo--p6' src={hot6} alt='iphone photo' />\n                    </div>\n                </section>\n                <footer className='footer'>\n                        <div className='trackerfy-info'>\n                            <p className='footer-title'>About</p>\n                            <p >Welcome to HotOFFThePress where you can browse the lasted news headlines of different categories congregated in one site. Browse, and be directed to the news article link instantly. &#169; All rights reserved for news story images of the respective artice.   </p>\n                        </div>\n                        <div >\n                            <p className='footer-title'>Site Links</p>\n                            <a href='https://github.com/qsmity/hotoffthepress'>\n                                <FaIcons.FaGithubSquare size='32px' />\n                            </a>\n\n                        </div>\n                        <div >\n                            <p className='footer-title'>My Links</p>\n                            <a href='https://github.com/qsmity'>\n                                <FaIcons.FaGithubSquare size='32px' />\n                            </a>\n                            <a href='https://www.linkedin.com/in/quynn-smith-a442671bb/'>\n                                <FaIcons.FaLinkedin size='32px' />\n                            </a>\n                        </div>\n                </footer>\n            </main>\n            <footer>\n\n            </footer>\n        </>\n    )\n}\n\nexport default Landing;","/home/qsmit/hot-off-the-press/client/src/components/pages/Session.tsx",[],"/home/qsmit/hot-off-the-press/client/src/store/reducers/error.tsx",["109"],"//ACTION TYPES\nconst ADD_ERROR: 'ADD_ERROR' = 'ADD_ERROR'\nconst REMOVE_ERROR: 'REMOVE_ERROR' = 'REMOVE_ERROR'\n\n// TYPES AND INTERFACES\nexport interface ErrorState {\n    message: string | null\n}\n\nexport type Actions = \n    | {type: \"ADD_ERROR\", message: string}\n    | {type: \"REMOVE_ERROR\"}\n\n// ACTION CREATORS\nexport const addError = (error: string) => {\n    return {\n        type: ADD_ERROR, \n        message: error\n    }\n}\n\nexport const removeError = () => {\n    return {\n        type: REMOVE_ERROR\n    }\n}\n\n// THUNKS\n\n// REDUCER - generic error handler\n\nexport default (state: ErrorState = { message: null}, action: Actions) => {\n    switch (action.type) {\n        case ADD_ERROR:\n            return {...state, message: action.message};\n        case REMOVE_ERROR:\n            return {...state, message: null};\n        default:\n            return state;\n    }\n}","/home/qsmit/hot-off-the-press/client/src/components/AuthForm.tsx",[],"/home/qsmit/hot-off-the-press/client/src/services/api.tsx",[],"/home/qsmit/hot-off-the-press/client/src/components/pages/NewsFeed.tsx",["110","111","112"],"import React, { useEffect, useState } from 'react'\nimport { dataNewsApiCall } from '../../services/api'\nimport Headlines from '../Headlines'\nimport ProgressLoader from '../utilites/ProgressLoader'\nimport ErrorMessage from './ErrorMessage'\n\nconst NewsFeed: React.FC<INewsFeedProps> = ({ category }) => {\n\n    const [newsResults, setNewsResults] = useState<Iheadline[] | null>(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [currentPageNumber, setCurrentPageNumber] = useState(1)\n    const [isError, setIsError] = useState(false)\n\n    const getNewResults = async (): Promise<void> => {\n        try {\n            // remove api error if exists \n            setIsError(false)\n            // grab new headlines\n            const headlines: { hits: Iheadline[] } = await dataNewsApiCall(category, currentPageNumber)\n            //update new results\n            setNewsResults(headlines.hits)\n\n        } catch (e) {\n            setIsError(true)\n        }\n    }\n\n    const loadMoreResults = async (): Promise<void> => {\n        try {\n            // remove api error if exists \n            setIsError(false)\n            // grab new headlines\n            const headlines: { hits: Iheadline[] } = await dataNewsApiCall(category, currentPageNumber + 1)\n            //update new results\n            if(newsResults){\n                setNewsResults(newsResults.concat(headlines.hits))\n            }\n\n        } catch (e) {\n            setIsError(true)\n        }\n    }\n\n    useEffect(() => {\n        (async () => {\n\n            try {\n                setIsError(false)\n                const headlines: { hits: Iheadline[] } = await dataNewsApiCall(category, currentPageNumber + 1)\n                setNewsResults(headlines.hits)\n                setIsLoading(false)\n            } catch (e) {\n                setIsError(true)\n            }\n\n        })()\n    }, [category])\n\n    return (\n        <>\n            <header className={`header ${category}`}>\n                <div className='heading-secondary'>\n                    <span className={category}>{category}</span>\n                </div>\n            </header>\n            <main>\n                <div className='refresh'>\n                    <ProgressLoader isLoading={isLoading} />\n                    <a\n                        onClick={getNewResults}\n                        href='#results-button'\n                        id='results-button'\n                        className='btn btn--grey'>\n                        new results\n                        </a>\n                </div>\n\n                <Headlines\n                    category={category}\n                    newsResults={newsResults}\n                    loadMoreResults={loadMoreResults} />\n                <ErrorMessage isError={isError} />\n\n            </main>\n        </>\n    )\n}\n\ninterface INewsFeedProps {\n    category: string;\n}\n\nexport interface Iheadline {\n    url: string,\n    imageUrl: string,\n    description: string,\n    pubDate: string,\n    title: string\n}\n\nenum Categories {\n    BUSINESS = 'business',\n    ENTERTAINMENT = 'entertainment',\n    GENERAL = 'general',\n    HEALTH = 'health',\n    SCIENCE = 'science',\n    SPORTS = 'sports',\n    TECH = 'tech'\n}\n\nexport default NewsFeed;","/home/qsmit/hot-off-the-press/client/src/hocs/ProtectedRoute.tsx",[],"/home/qsmit/hot-off-the-press/client/src/hocs/NotAuthenticatedRoute.tsx",[],"/home/qsmit/hot-off-the-press/client/src/components/Headlines.tsx",["113"],"import React, { useEffect } from 'react'\nimport { Iheadline } from './pages/NewsFeed'\nimport  LoadMoreButton  from './utilites/LoadMoreButton'\n\nconst Headlines: React.FC<IHeadlineProps> = ({ newsResults, category, loadMoreResults }) => {\n\n    useEffect(() => {\n        console.log('')\n    }, [newsResults, category])\n\n    // redirect user to news story site\n    const handleClick = (e: React.SyntheticEvent) => {\n        window.location.href = e.currentTarget.id\n    }\n\n    const formatDate = (date: string): string => {\n        const convertedDate = new Date(date).toString()\n        const formattedDate = convertedDate.split('GMT')[0]\n        return formattedDate\n    }\n\n    const addEllipsis = (description: string): string => {\n        if (description.length > 75) {\n            return description.slice(0, 75) + '...'\n        }\n        return description;\n    }\n\n    return (\n        <>\n            <section className='section-newsfeed'>\n                {(newsResults) && (\n                    newsResults.map((headline: Iheadline, i) => {\n                        return <figure key={i + headline.url} onClick={handleClick} id={headline.url} className='section-newsfeed__shape'>\n                            <img className='section-newsfeed__image' src={headline.imageUrl} alt={`${category} photo`} />\n                            <figcaption className='section-newsfeed__text'>\n                                <span className='section-newsfeed__description'>{addEllipsis(headline.description)}</span>\n                                <span className='section-newsfeed__pubDate'>Date: {formatDate(headline.pubDate)}</span>\n                            </figcaption>\n                        </figure>\n                    })\n\n                )}\n            </section>\n            <LoadMoreButton loadMoreResults={loadMoreResults}/>\n        </>\n    )\n\n}\n\ninterface IHeadlineProps {\n    newsResults: Iheadline[] | null;\n    category: string;\n    loadMoreResults: () => void;\n\n}\n\nexport default Headlines;","/home/qsmit/hot-off-the-press/client/src/components/utilites/ProgressLoader.tsx",[],"/home/qsmit/hot-off-the-press/client/src/components/pages/ErrorMessage.tsx",[],"/home/qsmit/hot-off-the-press/client/src/components/utilites/LoadMoreButton.tsx",[],["114","115"],"/home/qsmit/hot-off-the-press/client/src/components/Sidebar.tsx",[],"/home/qsmit/hot-off-the-press/client/src/store/localStorage.tsx",[],"/home/qsmit/hot-off-the-press/client/src/components/pages/NotFound.tsx",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":46,"column":25,"nodeType":"122","endLine":46,"endColumn":79},{"ruleId":"123","severity":1,"message":"124","line":37,"column":6,"nodeType":"125","messageId":"126","endLine":37,"endColumn":26},{"ruleId":"127","severity":1,"message":"128","line":104,"column":1,"nodeType":"129","endLine":115,"endColumn":2},{"ruleId":"130","severity":1,"message":"131","line":27,"column":25,"nodeType":"122","endLine":27,"endColumn":120},{"ruleId":"130","severity":1,"message":"131","line":28,"column":25,"nodeType":"122","endLine":28,"endColumn":118},{"ruleId":"130","severity":1,"message":"131","line":29,"column":25,"nodeType":"122","endLine":29,"endColumn":120},{"ruleId":"130","severity":1,"message":"131","line":30,"column":25,"nodeType":"122","endLine":30,"endColumn":120},{"ruleId":"130","severity":1,"message":"131","line":31,"column":25,"nodeType":"122","endLine":31,"endColumn":120},{"ruleId":"130","severity":1,"message":"131","line":32,"column":25,"nodeType":"122","endLine":32,"endColumn":116},{"ruleId":"127","severity":1,"message":"128","line":32,"column":1,"nodeType":"129","endLine":41,"endColumn":2},{"ruleId":"123","severity":1,"message":"132","line":11,"column":31,"nodeType":"125","messageId":"126","endLine":11,"endColumn":51},{"ruleId":"133","severity":1,"message":"134","line":57,"column":8,"nodeType":"135","endLine":57,"endColumn":18,"suggestions":"136"},{"ruleId":"123","severity":1,"message":"137","line":101,"column":6,"nodeType":"125","messageId":"126","endLine":101,"endColumn":16},{"ruleId":"130","severity":1,"message":"131","line":35,"column":29,"nodeType":"122","endLine":35,"endColumn":122},{"ruleId":"116","replacedBy":"138"},{"ruleId":"118","replacedBy":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'IDispatchRemoveError' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'setCurrentPageNumber' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentPageNumber'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'Categories' is defined but never used.",["140"],["141"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [category, currentPageNumber]",{"range":"145","text":"146"},[1861,1871],"[category, currentPageNumber]"]